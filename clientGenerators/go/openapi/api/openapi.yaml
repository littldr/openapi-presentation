openapi: 3.0.2
info:
  title: Dog Management API
  version: 1.0.0
servers:
- url: /
paths:
  /dogs/{dogId}:
    get:
      operationId: getDog
      parameters:
      - explode: false
        in: path
        name: dogId
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dog'
          description: Successfully returns dog information
        404:
          content:
            application/json:
              example:
                status: 404
                title: Not Found
              schema:
                $ref: '#/components/schemas/Error'
          description: Dog not found error
      summary: Fetch dog information by the dog's name
  /dogs:
    post:
      operationId: createDog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dog'
        description: The dog to create
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dog'
          description: Successful created new dog
        400:
          content:
            application/json:
              example:
                status: 400
                title: Bad Request
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
      summary: Create new dog
components:
  schemas:
    Error:
      properties:
        status:
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem
          maximum: 599
          minimum: 100
          type: number
        title:
          description: A short, human-readable summary of the problem type
          type: string
      type: object
    Dog:
      example:
        name: Sir Barks-a-Lot
        id: sir-barks-a-lot
        age: 7
      properties:
        id:
          description: The id of the dog.
          example: sir-barks-a-lot
          readOnly: true
          type: string
        name:
          description: The name of the dog.
          example: Sir Barks-a-Lot
          type: string
        age:
          description: The age of the dog.
          example: 7
          minimum: 6
          type: number
      required:
      - age
      - id
      - name
      type: object
